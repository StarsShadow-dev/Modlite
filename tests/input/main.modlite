import { print startsWith toNumber } from "StandardLibrary"
import { createInput } from "../node.json"

var mode string

function main() void {
	mode = "normal"
	print("creating input")
	createInput(onInput)
}

// the Fibonacci sequence with recursion!
function fibonacci(n:number) number {
	if (n < 2) {
		return n
	}
	return fibonacci(n - 1) + fibonacci(n - 2)
}

function onInput(line:string) void {
	// a switch statement evaluates case conditions from top to bottom until a condition is true
	// then runs the contents of that case
	// (once the case is run the switch statement is over and no more cases can be run)
	switch {
		case (mode == "normal") {
			switch {
				case (startsWith(line "line")) {
					print("line = " .. line)
				}
				case (line == "box") {
					print("┌─────┐")
					print("│     │")
					print("│     │")
					print("└─────┘")
				}
				case (line == "big box") {
					print("┌──────────┐")
					print("│          │")
					print("│          │")
					print("│          │")
					print("│          │")
					print("└──────────┘")
				}
				case (line == "very big box") {
					print("┌────────────────────┐")
					print("│                    │")
					print("│                    │")
					print("│                    │")
					print("│                    │")
					print("│                    │")
					print("│                    │")
					print("│                    │")
					print("│                    │")
					print("│                    │")
					print("└────────────────────┘")
				}
				case (line == "gone box") {
					print("")
				}
				case (line == "long") {
					print("long")
					print("loong")
					print("looong")
					print("loooong")
					print("looooong")
					print("loooooong")
					print("looooooong")
					print("loooooooong")
					print("looooooooong")
					print("loooooooooong")
					print("")
					print("Is that long enough for you?")
				}
				case (line == "fibonacci") {
					print("fibonacci:")
					mode = "fibonacci"
				}
				case (line == "") {
					print("empty input")
				}
				// this case is run when none of the other conditions are true
				case (true) {
					print("unknown input " .. line)
				}
			}
		}
		case (mode == "fibonacci") {
			print(fibonacci(toNumber(line)))
			mode = "normal"
		}
	}
}